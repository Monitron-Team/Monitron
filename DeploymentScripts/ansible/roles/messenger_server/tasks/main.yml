---
- include_vars: cert_vault.yml
- include_vars: passwords_vault.yml

- name: clean log files ( remove once enough time has passed )
  file: name=/var/log/prosody state=absent

- name: install Prosody
  dnf: name=prosody state=latest
  notify:
   - start Prosody

- name: enable Prosody
  service: name=prosody enabled=yes

- name: upload Prosody server configuration
  template: src=prosody.cfg.lua.j2 dest={{prosody_conf_path}} mode=640 owner=root group=prosody
  notify:
   - restart Prosody

- name: upload Monitron site configuration
  template: src=prosody_site.cfg.lua.j2 dest={{monitron_site_conf_path}} mode=640 owner=root group=prosody
  notify:
   - restart Prosody

- name: upload Monitron site cert (crt)
  copy:
   content: "{{ monitron_cert_crt }}"
   dest: "{{pki_path}}/{{domain_name}}.crt"
   mode: 0644
   owner: root
   group: root
  notify:
   - restart Prosody

- name: upload Monitron site cert (key)
  copy:
   content: "{{ monitron_cert_key }}"
   dest: "{{pki_path}}/{{domain_name}}.key"
   mode: 0640
   owner: root
   group: prosody
  notify:
   - restart Prosody

- name: upload Monitron site cert (cnf)
  copy:
   content: "{{ monitron_cert_cnf }}"
   dest: "{{pki_path}}/{{domain_name}}.cnf"
   mode: 0640
   owner: root
   group: prosody
  notify:
   - restart Prosody

- name: upload Monitron Ad-Hoc module
  copy: src=mod_monitron_adhoc.lua dest={{prosody_module_path}} mode=644 owner=root group=root
  notify:
   - restart Prosody

- name: upload json module
  copy: src=dkjson.lua dest={{prosody_lib_path}} mode=644 owner=root group=root
  notify:
   - restart Prosody

- name: upload Boty Auth module
  copy: src=mod_auth_boty.lua dest={{prosody_module_path}} mode=644 owner=root group=root
  notify:
   - restart Prosody

- name: create admin account
  become: yes
  become_user: mongodb
  script: create_admin_account.sh '{{monitron_admin_password}}'

- name: create Monitron admin
  become: yes
  become_user: mongodb
  script: add_system_contact.sh 'monitron_admin@{{domain_name}}' '{{monitron_admin_password}}' 'monitron admin'

- name: create Server admin
  become: yes
  become_user: mongodb
  script: add_system_contact.sh 'admin@{{domain_name}}' '{{admin_password}}' 'server admin'

- name: create Management user
  become: yes
  become_user: mongodb
  script: add_system_contact.sh 'themanagement@{{domain_name}}' '{{monitron_management_password}}' 'management'

- name: create Local Monitor user
  become: yes
  become_user: mongodb
  script: add_system_contact.sh 'local_monitor@{{domain_name}}' '{{local_monitor_password}}' 'local monitor'

- name: set up rosters
  become: yes
  become_user: mongodb
  script: set_up_rosters.sh
