# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

vagrant_config = YAML.load_file("vagrant.conf.yml")
MAX_WORKER_NUM = vagrant_config['max_worker_num']
ANSIBLE_ROOT = vagrant_config['ansible_root']

Vagrant.configure(2) do |config|
	config.vm.box = "fedora/23-cloud-base"
	if Vagrant.has_plugin?("vagrant-cachier")
	        # Configure cached packages to be shared between instances of the same base box.
	        # More info on http://fgrehm.viewdocs.io/vagrant-cachier/usage
	        config.cache.scope = :box
	end

	config.vm.define "boss", primary: true do |boss|
	        boss.vm.hostname = "monitron-boss"
	end

	config.vm.define "worker-0" do |worker|
	        worker.vm.hostname = "monitron-worker-0"
	end

	(1..MAX_WORKER_NUM).each do |i|
	        config.vm.define "worker-#{i}", autostart: false do |worker|
	      	  worker.vm.hostname = "monitron-worker-#{i}"
	        end
	end

	config.vm.provision "ansible" do |ansible|
	       ansible.playbook = ANSIBLE_ROOT + "/site.yml"
	       ansible.vault_password_file = ANSIBLE_ROOT + "/vault_password"
	       ansible.force_remote_user = true
	       ansible.groups = {
	               "boss_servers" => ["boss"],
	               "worker_servers" => (0..MAX_WORKER_NUM).map { |i| "worker-#{i}" }
	       }
	       ansible.extra_vars = "ansible_extra_vars.yml"
	end

	config.ssh.insert_key = false
	config.ssh.username = "root"
end
